# DROP TABLE IF EXISTS USER_TOKEN;
# DROP TABLE IF EXISTS TOKEN_STORAGE;
# DROP TABLE IF EXISTS USER_STORAGE;


CREATE TABLE IF NOT EXISTS TOKEN_STORAGE (
    ID INT NOT NULL AUTO_INCREMENT,
    PRIMARY KEY(ID),
    TOKEN BIGINT,
    ExpirationDate TIMESTAMP
                                         );



CREATE TABLE IF NOT EXISTS USER_STORAGE (
    ID INT NOT NULL AUTO_INCREMENT,
    PRIMARY KEY(ID),
    PASSWORD VARCHAR(20),
    USERNAME VARCHAR(20) UNIQUE,
    REGISTERED_AT TIMESTAMP,
    NAME VARCHAR(20),
    SURNAME VARCHAR(20),
    IS_ACTIVE BOOL
                                        );



CREATE TABLE IF NOT EXISTS USER_TOKEN (
    USER_NAME VARCHAR(20) NOT NULL UNIQUE,
    PRIMARY KEY(USER_NAME),
    TOKEN_ID INT(20),
    FOREIGN KEY (USER_NAME) REFERENCES USER_STORAGE(USERNAME) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (TOKEN_ID) REFERENCES TOKEN_STORAGE(ID) ON DELETE SET NULL ON UPDATE CASCADE
                                      ) ENGINE=InnoDB ;


CREATE TABLE ROLE (
                        ID int(11) NOT NULL AUTO_INCREMENT,
                        NAME varchar(45) DEFAULT NULL,
                        PRIMARY KEY (ID)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

LOCK TABLES ROLE WRITE;
INSERT INTO ROLE VALUES (1,'ROLE_USER');
INSERT INTO ROLE VALUES (2, 'ROLE_ADMIN');
INSERT INTO ROLE VALUES (3, 'ROLE_MODERATOR');
UNLOCK TABLES;


CREATE TABLE USER_ROLE (
                           USER_NAME VARCHAR(20) NOT NULL UNIQUE,
                           ROLE_ID INT(20) NOT NULL,
                           PRIMARY KEY (USER_NAME, ROLE_ID),
                           KEY fk_user_role_roleid_idx (ROLE_ID),
                           CONSTRAINT fk_user_role_roleid FOREIGN KEY (ROLE_ID) REFERENCES ROLE(ID) ON DELETE CASCADE ON UPDATE CASCADE,
                           CONSTRAINT fk_user_role_userid FOREIGN KEY (USER_NAME) REFERENCES USER_STORAGE(USERNAME) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
